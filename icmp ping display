#include <SPI.h>
#include <Ethernet.h>
#include <ICMPPing.h>
#include <LiquidCrystal.h>

// ICMP code developed by Blake Foster.
// LiquidDisplay code developed by Arduino.

// Combined codes for a program that shows the ping times of the ICMP via LCD screen.
// Still having some trouble with accurate ping times and issues between the ICMP library and the LCD library, but its usable now.

byte mac[] = {0xDE, 0xAD, 0xBE, 0xBE, 0xFE, 0xED};
byte ip[] = {192,168,0,10}; // ip address for ethernet shield
IPAddress pingAddr(8,8,8,8); // ip address to ping

SOCKET pingSocket = 0;
char buffer [256];
ICMPPing ping(pingSocket, (uint16_t)random(0, 255));

LiquidCrystal lcd(1, 4, 2, 5, 6, 7);

void setup() {

  lcd.begin(16, 2); 
  
  Ethernet.begin(mac, ip);
  Serial.begin(9600);
}

void loop()
{
  ICMPEchoReply echoReply = ping(pingAddr, 4);
  if (echoReply.status == SUCCESS)
  
  {

if(((millis() - echoReply.data.time)<1000))  {

   lcd.print((millis() - echoReply.data.time));
   lcd.print("ms");
   lcd.print("                                   ");

}   else

   lcd.print((millis() - echoReply.data.time));
   lcd.print("ms");
   lcd.print("                                  ");

   
   
    sprintf(buffer,
            "Reply[%d] from: %d.%d.%d.%d: bytes=%d time=%ldms TTL=%d",
            echoReply.data.seq,
            echoReply.addr[0],
            echoReply.addr[1],
            echoReply.addr[2],
            echoReply.addr[3],
            REQ_DATASIZE,
            millis() - echoReply.data.time,
            echoReply.ttl);
   
  }
  else
  {

    lcd.print("_____ERROR______________________________");
   
   
    sprintf(buffer, "Echo request failed; %d", echoReply.status);
  }
  Serial.println(buffer);
  delay(2500);
}
