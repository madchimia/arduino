#include <SPI.h>
#include <Ethernet.h>
#include <ICMPPing.h>
#include <LiquidCrystal.h>

byte mac[] = {0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};
byte ip[] = {192,168,0,10}; // ip address for ethernet shield
IPAddress pingAddr(8,8,8,8); // ip address to ping

SOCKET pingSocket = 0;

char buffer [256];
ICMPPing ping(pingSocket, (uint16_t)random(0, 255));

LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

void setup()
{
  // start Ethernet
  Ethernet.begin(mac, ip);
  Serial.begin(9600);
  
    // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD. 
  lcd.print("Ping test!");
}

void loop()
{
  ICMPEchoReply echoReply = ping(pingAddr, 4);
  if (echoReply.status == SUCCESS)
  {
    sprintf(buffer,
            "Reply[%d] from: %d.%d.%d.%d: bytes=%d time=%ldms TTL=%d",
            echoReply.data.seq,
            echoReply.addr[0],
            echoReply.addr[1],
            echoReply.addr[2],
            echoReply.addr[3],
            REQ_DATASIZE,
            millis() - echoReply.data.time,
            echoReply.ttl);
  }
  else
  {
    sprintf(buffer, "Echo request failed; %d", echoReply.status);
  }
  Serial.println(buffer);
  delay(500);
  
   // Clear the display:
  lcd.clear();
  delay(500);
   // Print a message to the LCD. 
  lcd.print("Reply[%d] from: %d.%d.%d.%d: bytes=%d time=%ldms TTL=%d");
  
  delay(2500);
}
